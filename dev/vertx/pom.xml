<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>net.deelam</groupId>
		<artifactId>graphtools-dev-pom</artifactId>
		<version>0.0.4-SNAPSHOT</version>
	</parent>
	<artifactId>graphtools-vertx</artifactId>
	<packaging>bundle</packaging>
	<name>Vertx components</name>
	<properties>
		<bundle.import_package>
			javassist.util.proxy, <!-- needed by frames; must manually import -->
			io.vertx.spi.cluster.*;resolution:=optional,
			com.hazelcast.*;resolution:=optional,
			org.apache.ignite.*;resolution:=optional,
			*
		</bundle.import_package>
		<vertx.version>3.2.1</vertx.version>
<!-- mvn exec:java -Dexec.args="run net.deelam.vertx.HelloWorldVerticle" -->
<!-- 		<main.verticle>net.deelam.vertx.HelloWorldVerticle</main.verticle>
		<exec.mainClass>io.vertx.core.Launcher</exec.mainClass>
 -->
 
 <!--		<exec.mainClass>net.deelam.vertx.HelloWorldVerticle</exec.mainClass>-->
	</properties>
	<profiles>
		<profile>
			<activation>
				<property>
					<name>osgiBundling</name>
				</property>
			</activation>
			<properties>
        <!-- <bundle.embedDependency>*;scope=compile|runtime;type=!pom;inline=false</bundle.embedDependency> -->
			</properties>
		</profile>
	</profiles>
	<dependencies>
	<dependency>
		<groupId>net.deelam</groupId>
		<artifactId>graphtools-core</artifactId>
	</dependency>
	
	<dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-ignite</artifactId>
      <version>3.3.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-hazelcast</artifactId>
      <version>${vertx.version}</version>
      <scope>provided</scope>
    </dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
     <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
    </dependency>

	<dependency>
		<groupId>org.apache.commons</groupId>
		<artifactId>commons-compress</artifactId>
		<version>1.11</version>
	</dependency>

	<dependency>
		<groupId>commons-io</groupId>
		<artifactId>commons-io</artifactId>
	</dependency>

	<dependency>
		<groupId>com.tinkerpop.blueprints</groupId>
		<artifactId>blueprints-core</artifactId>
		<scope>provided</scope>
	</dependency>

	<dependency>
		<groupId>com.tinkerpop</groupId>
		<artifactId>frames</artifactId>
		<scope>provided</scope>
	</dependency>


<!-- 	<dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-sync</artifactId>
      <version>${vertx.version}</version>
    </dependency> -->
	<dependency>
		<groupId>as.leap</groupId>
		<artifactId>vertx-rpc</artifactId>
		<version>3.1.1</version>
	</dependency>
 	<dependency>
		<groupId>io.reactivex</groupId>
		<artifactId>rxjava</artifactId>
		<version>1.1.9</version>
	</dependency>
<!-- 	<dependency>
		<groupId>co.paralleluniverse</groupId>
		<artifactId>quasar-core</artifactId>
		<version>0.7.6</version>
	</dependency> -->
<!--
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.fastjson</groupId>
			<artifactId>boon</artifactId>
			<version>0.33</version>
		</dependency>

		<dependency>
			<groupId>com.tinkerpop.blueprints</groupId>
			<artifactId>blueprints-neo4j-graph</artifactId>
			<scope>provided</scope><!- only include for compilation ->
		</dependency> 
    -->
<!--     <dependency>
      <groupId>com.tinkerpop.blueprints</groupId>
      <artifactId>blueprints-orient-graph</artifactId>
      <scope>provided</scope>only include for compilation
    </dependency> 
 -->
	<!-- 
<dependency>
	<groupId>com.orientechnologies</groupId>
	<artifactId>orient-commons</artifactId>
	<version>2.0-M1</version>
</dependency>
<dependency>
	<groupId>com.orientechnologies</groupId>
	<artifactId>orientdb-community</artifactId>
	<version>2.1.5</version>
</dependency>
 -->

	<dependency>
		<groupId>io.vertx</groupId>
		<artifactId>vertx-unit</artifactId>
		<version>${vertx.version}</version>
		<scope>test</scope>
	</dependency>
	<dependency>
		<groupId>com.tinkerpop.blueprints</groupId>
		<artifactId>blueprints-neo4j-graph</artifactId>
		<scope>provided</scope><!-- only include for compilation -->
	</dependency>
		
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib</classpathPrefix>
							<useUniqueVersions>false</useUniqueVersions>
						</manifest>
						<manifestEntries>
							<Class-Path>.</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
<!-- 
	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-dependency-plugin</artifactId>
		<version>2.10</version>
		<executions>
			<execution>
				<id>getClasspathFilenames</id>
				<goals>
					<goal>properties</goal>
				</goals>
			</execution>
		</executions>
	</plugin>
	<plugin>
		<groupId>org.codehaus.mojo</groupId>
		<artifactId>exec-maven-plugin</artifactId> Run with "mvn compile dependency:properties exec:exec"
		<version>1.3.2</version>
		<configuration>
			<mainClass>net.deelam.vertx.hadoop.VertxRpc</mainClass>
			<workingDirectory>target/classes</workingDirectory>
			<executable>java</executable>
			<arguments>
				Turn off before production
				<argument>-Dco.paralleluniverse.fibers.verifyInstrumentation=true</argument>

				Quasar Agent
				<argument>-javaagent:${co.paralleluniverse:quasar-core:jar}</argument>

				Classpath
				<argument>-classpath</argument>
				<classpath />
				
				<argument>net.deelam.vertx.hadoop.VertxRpc</argument>
			</arguments>
		</configuration>
	</plugin> -->
	
		</plugins>
	</build>

</project>
